import path from 'path';
import StyleDictionary from 'style-dictionary';
import { constantsFormatter, groupsFormatter, jsonFormatter, tokensFormatter } from './formatters';
import { pxToRemTranformer } from './transforms';

const ROOT_DIR = process.cwd();
const OUT_DIR = path.join(ROOT_DIR, 'src/');
const SRC_DIR = path.join(ROOT_DIR, 'tokens');

StyleDictionary.registerFormat(jsonFormatter);
StyleDictionary.registerFormat(groupsFormatter);
StyleDictionary.registerFormat(tokensFormatter);
StyleDictionary.registerFormat(constantsFormatter);

// Convert pixel values to rem.
StyleDictionary.registerTransform(pxToRemTranformer);

StyleDictionary.registerTransformGroup({
  name: 'css',
  transforms: ['attribute/cti', 'name/cti/kebab', 'size/pxToRem', 'color/hex'],
});

StyleDictionary.registerTransformGroup({
  name: 'typescript',
  transforms: ['attribute/cti', 'name/cti/camel', 'size/pxToRem', 'color/hex'],
});

StyleDictionary.registerFileHeader({
  name: 'header',
  fileHeader: () => ['THIS IS AN AUTOGENERATED FILE. DO NOT MODIFY.'],
});

StyleDictionary.extend({
  source: [path.join(SRC_DIR, '**/*.json')],
  platforms: {
    css: {
      buildPath: OUT_DIR,
      transformGroup: 'css',
      files: [
        {
          destination: 'tokens.css',
          options: {
            fileHeader: 'header',
          },
          format: 'css/variables',
        },
      ],
    },
    js: {
      buildPath: OUT_DIR,
      transformGroup: 'typescript',
      files: [
        {
          destination: 'constants.ts',
          options: {
            fileHeader: 'header',
          },
          format: 'typescript/constants',
        },
        {
          destination: 'groups.ts',
          options: {
            fileHeader: 'header',
          },
          format: 'typescript/groups',
        },
        {
          destination: 'tokens.ts',
          options: {
            fileHeader: 'header',
          },
          format: 'typescript/tokens',
        },
      ],
    },
    json: {
      buildPath: OUT_DIR,
      transformGroup: 'typescript',
      files: [
        {
          destination: 'tokens.json',
          format: 'json/raw',
        },
      ],
    },
    scss: {
      buildPath: OUT_DIR,
      transformGroup: 'css',
      files: [
        {
          destination: 'tokens.scss',
          options: {
            fileHeader: 'header',
          },
          format: 'scss/variables',
        },
        {
          destination: 'tokens.map.scss',
          options: {
            fileHeader: 'header',
          },
          format: 'scss/map-flat',
        },
      ],
    },
  },
}).buildAllPlatforms();
